% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rerun.R
\name{rerun}
\alias{rerun}
\alias{rerun.character}
\alias{rerun.flow}
\title{Re-run a pipeline in case of hardware or software failures.}
\usage{
rerun(x, ...)

\method{rerun}{character}(x, ...)

\method{rerun}{flow}(x, mat, def, start_from, execute = TRUE, kill = TRUE,
  ...)
}
\arguments{
\item{x}{flow working directory}

\item{...}{not used}

\item{mat}{(optional) flowmat fetched from previous submission if missing. For more information regarding the format refer to \link{to_flowmat}}

\item{def}{(optional) flowdef fetched from previous submission if missing.  For more information regarding the format refer to \link{to_flowdef}}

\item{start_from}{which job to start from}

\item{execute}{[logical] whether to execute or not}

\item{kill}{(optional) logical indicating whether to kill the jobs from old flow}
}
\description{
\itemize{
\item \strong{hardware} no change required, simple rerun: \code{rerun(x=flow_wd)}
\item \strong{software} either a change to flowmat or flowdef has been made: \code{rerun(x=flow_wd, mat = new_flowmat, def = new_flowdef)}
}

\strong{NOTE:}


\emph{flow_wd}: flow working directory, the input used for \link{status}
}
\details{
This function fetches details regarding the previous execution from the flow working directory (flow_wd).

It reads the flow \link{flow} from the flow_details.rds file, and exteacts flowdef and flowmat for this \link{flow}
object using \link{to_flowmat} and \link{to_flowdef} functions.
Optionally if either of these (flowmat or flowdef) are supplied, they are used instead for the new submission.

This functions efficiently updates job details of the latest submission into previous file; thus information
regarding previous job ids and their status is not lost.
}
\examples{
\dontrun{
rerun_flow(wd = wd, fobj = fobj, execute = TRUE, kill = TRUE)
}
}

